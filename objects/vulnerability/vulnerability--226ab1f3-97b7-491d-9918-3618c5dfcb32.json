{
    "type": "bundle",
    "id": "bundle--82076eb1-6ef3-4c0a-97e5-2b16b82cb844",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--226ab1f3-97b7-491d-9918-3618c5dfcb32",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-10T01:14:02.145648Z",
            "modified": "2024-11-10T01:14:02.145648Z",
            "name": "CVE-2024-50262",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix out-of-bounds write in trie_get_next_key()\n\ntrie_get_next_key() allocates a node stack with size trie->max_prefixlen,\nwhile it writes (trie->max_prefixlen + 1) nodes to the stack when it has\nfull paths from the root to leaves. For example, consider a trie with\nmax_prefixlen is 8, and the nodes with key 0x00/0, 0x00/1, 0x00/2, ...\n0x00/8 inserted. Subsequent calls to trie_get_next_key with _key with\n.prefixlen = 8 make 9 nodes be written on the node stack with size 8.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50262"
                }
            ]
        }
    ]
}