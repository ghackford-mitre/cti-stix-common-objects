{
    "type": "bundle",
    "id": "bundle--3cc02677-f3b1-4b90-b309-9253af0aa58c",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--7e3fabc7-4bff-492a-9476-0ebef12ef2db",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-03-22T01:14:14.253276Z",
            "modified": "2025-03-22T01:14:14.253276Z",
            "name": "CVE-2025-30204",
            "description": "golang-jwt is a Go implementation of JSON Web Tokens. Prior to \n5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-30204"
                }
            ]
        }
    ]
}