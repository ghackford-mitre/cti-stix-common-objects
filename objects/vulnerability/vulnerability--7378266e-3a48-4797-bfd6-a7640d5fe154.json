{
    "type": "bundle",
    "id": "bundle--fbf6fd3b-1aec-4067-9685-0edd0477ba19",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--7378266e-3a48-4797-bfd6-a7640d5fe154",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-09T01:20:28.630575Z",
            "modified": "2025-05-09T01:20:28.630575Z",
            "name": "CVE-2025-37813",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Fix invalid pointer dereference in Etron workaround\n\nThis check is performed before prepare_transfer() and prepare_ring(), so\nenqueue can already point at the final link TRB of a segment. And indeed\nit will, some 0.4% of times this code is called.\n\nThen enqueue + 1 is an invalid pointer. It will crash the kernel right\naway or load some junk which may look like a link TRB and cause the real\nlink TRB to be replaced with a NOOP. This wouldn't end well.\n\nUse a functionally equivalent test which doesn't dereference the pointer\nand always gives correct result.\n\nSomething has crashed my machine twice in recent days while playing with\nan Etron HC, and a control transfer stress test ran for confirmation has\njust crashed it again. The same test passes with this patch applied.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37813"
                }
            ]
        }
    ]
}