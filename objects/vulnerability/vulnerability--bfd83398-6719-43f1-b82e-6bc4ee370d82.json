{
    "type": "bundle",
    "id": "bundle--7ae2ecad-0a95-4e4f-9eba-675e2c9c9572",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--bfd83398-6719-43f1-b82e-6bc4ee370d82",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-29T01:01:22.754487Z",
            "modified": "2024-05-29T01:01:22.754487Z",
            "name": "CVE-2021-47327",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/arm-smmu: Fix arm_smmu_device refcount leak when arm_smmu_rpm_get fails\n\narm_smmu_rpm_get() invokes pm_runtime_get_sync(), which increases the\nrefcount of the \"smmu\" even though the return value is less than 0.\n\nThe reference counting issue happens in some error handling paths of\narm_smmu_rpm_get() in its caller functions. When arm_smmu_rpm_get()\nfails, the caller functions forget to decrease the refcount of \"smmu\"\nincreased by arm_smmu_rpm_get(), causing a refcount leak.\n\nFix this issue by calling pm_runtime_resume_and_get() instead of\npm_runtime_get_sync() in arm_smmu_rpm_get(), which can keep the refcount\nbalanced in case of failure.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47327"
                }
            ]
        }
    ]
}