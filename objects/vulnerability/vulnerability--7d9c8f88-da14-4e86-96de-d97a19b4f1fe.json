{
    "type": "bundle",
    "id": "bundle--998c7629-b5cd-40aa-8b00-2607af839bfc",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--7d9c8f88-da14-4e86-96de-d97a19b4f1fe",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-22T00:57:53.789084Z",
            "modified": "2024-05-22T00:57:53.789084Z",
            "name": "CVE-2021-47416",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47416"
                }
            ]
        }
    ]
}