{
    "type": "bundle",
    "id": "bundle--eb48dbcf-6c89-47fe-a684-bd59ad6658cc",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9637b44e-aa49-444b-8408-f6430b10a1d5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-19T01:14:59.48028Z",
            "modified": "2025-04-19T01:14:59.48028Z",
            "name": "CVE-2025-37893",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: BPF: Fix off-by-one error in build_prologue()\n\nVincent reported that running BPF progs with tailcalls on LoongArch\ncauses kernel hard lockup. Debugging the issues shows that the JITed\nimage missing a jirl instruction at the end of the epilogue.\n\nThere are two passes in JIT compiling, the first pass set the flags and\nthe second pass generates JIT code based on those flags. With BPF progs\nmixing bpf2bpf and tailcalls, build_prologue() generates N insns in the\nfirst pass and then generates N+1 insns in the second pass. This makes\nepilogue_offset off by one and we will jump to some unexpected insn and\ncause lockup. Fix this by inserting a nop insn.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37893"
                }
            ]
        }
    ]
}