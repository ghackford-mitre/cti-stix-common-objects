{
    "type": "bundle",
    "id": "bundle--19f4a096-fe40-49a6-aac9-bbbb52cadf8e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c72959c7-0e2a-4108-bb9a-c19908d256a1",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-18T01:07:06.433402Z",
            "modified": "2024-08-18T01:07:06.433402Z",
            "name": "CVE-2024-42279",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-42279"
                }
            ]
        }
    ]
}