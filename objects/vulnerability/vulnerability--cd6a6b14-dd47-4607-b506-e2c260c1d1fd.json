{
    "type": "bundle",
    "id": "bundle--1d94e844-7162-4f18-8c54-7253e5f82244",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--cd6a6b14-dd47-4607-b506-e2c260c1d1fd",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-02T00:56:50.93192Z",
            "modified": "2024-04-02T00:56:50.93192Z",
            "name": "CVE-2021-47132",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix sk_forward_memory corruption on retransmission\n\nMPTCP sk_forward_memory handling is a bit special, as such field\nis protected by the msk socket spin_lock, instead of the plain\nsocket lock.\n\nCurrently we have a code path updating such field without handling\nthe relevant lock:\n\n__mptcp_retrans() -> __mptcp_clean_una_wakeup()\n\nSeveral helpers in __mptcp_clean_una_wakeup() will update\nsk_forward_alloc, possibly causing such field corruption, as reported\nby Matthieu.\n\nAddress the issue providing and using a new variant of blamed function\nwhich explicitly acquires the msk spin lock.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47132"
                }
            ]
        }
    ]
}