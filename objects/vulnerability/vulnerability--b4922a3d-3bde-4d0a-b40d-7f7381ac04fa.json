{
    "type": "bundle",
    "id": "bundle--d77757d9-01d6-4ad7-a26d-63dbb70de76f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b4922a3d-3bde-4d0a-b40d-7f7381ac04fa",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-30T01:02:44.093813Z",
            "modified": "2024-07-30T01:02:44.093813Z",
            "name": "CVE-2024-41090",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntap: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tap_get_user_xdp() path, which could cause a corrupted skb to be\nsent downstack. Even before the skb is transmitted, the\ntap_get_user_xdp()-->skb_set_network_header() may assume the size is more\nthan ETH_HLEN. Once transmitted, this could either cause out-of-bound\naccess beyond the actual length, or confuse the underlayer with incorrect\nor inconsistent header length in the skb metadata.\n\nIn the alternative path, tap_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tap_get_user() does.\n\nCVE: CVE-2024-41090",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-41090"
                }
            ]
        }
    ]
}