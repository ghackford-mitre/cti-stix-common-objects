{
    "type": "bundle",
    "id": "bundle--3007266a-4614-46bc-a4df-9773a62fef8a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--6b0c1bdc-49f0-4e4e-a532-c1595a0101f5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-05T01:15:09.688195Z",
            "modified": "2025-04-05T01:15:09.688195Z",
            "name": "CVE-2025-31130",
            "description": "gitoxide is an implementation of git written in Rust. Before 0.42.0, gitoxide uses SHA-1 hash implementations without any collision detection, leaving it vulnerable to hash collision attacks. gitoxide uses the sha1_smol or sha1 crate, both of which implement standard SHA-1 without any mitigations for collision attacks. This means that two distinct Git objects with colliding SHA-1 hashes would break the Git object model and integrity checks when used with gitoxide. This vulnerability is fixed in 0.42.0.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-31130"
                }
            ]
        }
    ]
}