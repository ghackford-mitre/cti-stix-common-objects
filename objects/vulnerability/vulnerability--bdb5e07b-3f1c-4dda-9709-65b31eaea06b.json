{
    "type": "bundle",
    "id": "bundle--428e9386-7dc7-4695-b69e-3fec94e26405",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--bdb5e07b-3f1c-4dda-9709-65b31eaea06b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-11T01:10:35.01947Z",
            "modified": "2025-02-11T01:10:35.01947Z",
            "name": "CVE-2025-24032",
            "description": "PAM-PKCS#11 is a Linux-PAM login module that allows a X.509 certificate based user login. Prior to version 0.6.13, if cert_policy is set to none (the default value), then pam_pkcs11 will only check if the user is capable of logging into the token. An attacker may create a different token with the user's public data (e.g. the user's certificate) and a PIN known to the attacker. If no signature with the private key is required, then the attacker may now login as user with that created token. The default to *not* check the private key's signature has been changed with commit commi6638576892b59a99389043c90a1e7dd4d783b921, so that all versions starting with pam_pkcs11-0.6.0 should be affected. As a workaround, in `pam_pkcs11.conf`, set at least `cert_policy = signature;`.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-24032"
                }
            ]
        }
    ]
}