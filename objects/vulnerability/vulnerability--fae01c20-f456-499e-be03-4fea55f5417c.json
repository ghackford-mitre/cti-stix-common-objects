{
    "type": "bundle",
    "id": "bundle--8ac466e9-ecde-4e77-bf91-fa4d100afd62",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--fae01c20-f456-499e-be03-4fea55f5417c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-23T00:57:26.208905Z",
            "modified": "2024-05-23T00:57:26.208905Z",
            "name": "CVE-2021-47444",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/edid: In connector_bad_edid() cap num_of_ext by num_blocks read\n\nIn commit e11f5bd8228f (\"drm: Add support for DP 1.4 Compliance edid\ncorruption test\") the function connector_bad_edid() started assuming\nthat the memory for the EDID passed to it was big enough to hold\n`edid[0x7e] + 1` blocks of data (1 extra for the base block). It\ncompletely ignored the fact that the function was passed `num_blocks`\nwhich indicated how much memory had been allocated for the EDID.\n\nLet's fix this by adding a bounds check.\n\nThis is important for handling the case where there's an error in the\nfirst block of the EDID. In that case we will call\nconnector_bad_edid() without having re-allocated memory based on\n`edid[0x7e]`.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47444"
                }
            ]
        }
    ]
}