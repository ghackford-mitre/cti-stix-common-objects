{
    "type": "bundle",
    "id": "bundle--85f41ae3-8d01-4d17-b326-8a2a594f286f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--fc6bc64f-f4ea-452f-a555-5b1abfedf0be",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-13T01:01:50.257391Z",
            "modified": "2024-07-13T01:01:50.257391Z",
            "name": "CVE-2024-39496",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: fix use-after-free due to race with dev replace\n\nWhile loading a zone's info during creation of a block group, we can race\nwith a device replace operation and then trigger a use-after-free on the\ndevice that was just replaced (source device of the replace operation).\n\nThis happens because at btrfs_load_zone_info() we extract a device from\nthe chunk map into a local variable and then use the device while not\nunder the protection of the device replace rwsem. So if there's a device\nreplace operation happening when we extract the device and that device\nis the source of the replace operation, we will trigger a use-after-free\nif before we finish using the device the replace operation finishes and\nfrees the device.\n\nFix this by enlarging the critical section under the protection of the\ndevice replace rwsem so that all uses of the device are done inside the\ncritical section.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-39496"
                }
            ]
        }
    ]
}