{
    "type": "bundle",
    "id": "bundle--a3ac0246-0abd-47a7-98d8-a1553ea1d27d",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b6d54a87-aa30-4fd1-9bb1-825c87848258",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-23T01:18:38.731838Z",
            "modified": "2025-04-23T01:18:38.731838Z",
            "name": "CVE-2025-3519",
            "description": "An authorization bypass in Unblu Spark allows a participant of a conversation to replace an existing, uploaded file.\n\nEvery uploaded file in Unblu gets assigned with a randomly generated Universally Unique ID (UUID). In case a participant of this or another conversation gets access to such a file ID, it can be used to replace the file without changing the file name and details or the name of the user who uploaded the file. During the upload, file interception and allowed file type rules are still applied correctly.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-3519"
                }
            ]
        }
    ]
}