{
    "type": "bundle",
    "id": "bundle--0c3c773b-79c3-45dd-ac88-38992916120a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c39f063d-e596-4a56-9b47-000b455650c5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-25T00:57:55.1513Z",
            "modified": "2024-04-25T00:57:55.1513Z",
            "name": "CVE-2024-26926",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: check offset alignment in binder_get_object()\n\nCommit 6d98eb95b450 (\"binder: avoid potential data leakage when copying\ntxn\") introduced changes to how binder objects are copied. In doing so,\nit unintentionally removed an offset alignment check done through calls\nto binder_alloc_copy_from_buffer() -> check_buffer().\n\nThese calls were replaced in binder_get_object() with copy_from_user(),\nso now an explicit offset alignment check is needed here. This avoids\nlater complications when unwinding the objects gets harder.\n\nIt is worth noting this check existed prior to commit 7a67a39320df\n(\"binder: add function to copy binder object from buffer\"), likely\nremoved due to redundancy at the time.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26926"
                }
            ]
        }
    ]
}