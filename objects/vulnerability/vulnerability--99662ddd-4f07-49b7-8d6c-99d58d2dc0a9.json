{
    "type": "bundle",
    "id": "bundle--8c023d5d-3ba0-47ec-8756-99189a96a0f7",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--99662ddd-4f07-49b7-8d6c-99d58d2dc0a9",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-17T01:02:29.085493Z",
            "modified": "2024-07-17T01:02:29.085493Z",
            "name": "CVE-2022-48784",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: fix race in netlink owner interface destruction\n\nMy previous fix here to fix the deadlock left a race where\nthe exact same deadlock (see the original commit referenced\nbelow) can still happen if cfg80211_destroy_ifaces() already\nruns while nl80211_netlink_notify() is still marking some\ninterfaces as nl_owner_dead.\n\nThe race happens because we have two loops here - first we\ndev_close() all the netdevs, and then we destroy them. If we\nalso have two netdevs (first one need only be a wdev though)\nthen we can find one during the first iteration, close it,\nand go to the second iteration -- but then find two, and try\nto destroy also the one we didn't close yet.\n\nFix this by only iterating once.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48784"
                }
            ]
        }
    ]
}