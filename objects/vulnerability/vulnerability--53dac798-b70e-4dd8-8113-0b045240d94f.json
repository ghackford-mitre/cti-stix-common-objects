{
    "type": "bundle",
    "id": "bundle--bbea539a-a18a-4632-8713-98cfa1c3f278",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--53dac798-b70e-4dd8-8113-0b045240d94f",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-21T01:22:10.332167Z",
            "modified": "2025-05-21T01:22:10.332167Z",
            "name": "CVE-2025-37938",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Verify event formats that have \"%*p..\"\n\nThe trace event verifier checks the formats of trace events to make sure\nthat they do not point at memory that is not in the trace event itself or\nin data that will never be freed. If an event references data that was\nallocated when the event triggered and that same data is freed before the\nevent is read, then the kernel can crash by reading freed memory.\n\nThe verifier runs at boot up (or module load) and scans the print formats\nof the events and checks their arguments to make sure that dereferenced\npointers are safe. If the format uses \"%*p..\" the verifier will ignore it,\nand that could be dangerous. Cover this case as well.\n\nAlso add to the sample code a use case of \"%*pbl\".",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37938"
                }
            ]
        }
    ]
}