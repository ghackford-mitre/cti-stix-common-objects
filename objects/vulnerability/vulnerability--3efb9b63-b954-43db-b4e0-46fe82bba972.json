{
    "type": "bundle",
    "id": "bundle--a4ffcb9c-c2b3-45f1-a7b0-bf107bf2671c",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3efb9b63-b954-43db-b4e0-46fe82bba972",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-21T00:57:41.810453Z",
            "modified": "2024-05-21T00:57:41.810453Z",
            "name": "CVE-2024-36000",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-36000"
                }
            ]
        }
    ]
}